<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">

	<!-- 1단계 : 시큐리티가 제공하는 디폴트 페이지 사용 -->
	<!-- 
	intercept-url : 감시해야 할 url과 접근 가능한 권한을 정의한다. 즉, 권한이 없다면 해당 요청까지 들어가지 못하고 중간에 인터셉트 된다.
	
	pattern : 권한을 적용할 URL 요청명
	
	access : 접근 권한 설정
		-hasRole('권한명') : 해당 권한만 접근 가능함.
		-hasAnyRole('권한명1, 권한명2...') : 여러 권한 중 1개만 획득하면 접근 가능함.
		-permitAll :  권한 없이 누구나 접근 가능
		
	form-login : 로그인 페이지에 대한 요소 지정. 여기서는 디폴트 페이지를 사용함.
	
	logout : 로그아웃 페이지의 요소 지정. 여기서는 디폴트 페이지를 사용함.
	
	 -->
	<!--
	1단계와 2단계는 같이 사용할 수 없으므로 주석처리.  -->
	<!-- <security:http>
		<security:intercept-url pattern="/member/**" access="hasRole('USER')"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<security:form-login/>
		<security:logout/>
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="asd123" password="1234" authorities="ROLE_USER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> 	 -->
	<!-- 2단계 : 로그인 화면 커스트마이징하기 -->
	<!-- 
	form-login 하위 속성
		login-page : 커스텀 로그인 페이지를 지정함.
		default-target-url : 로그인 후 기본으로 보여질 페이지를 지정함.
		authentication-failure-url : 로그인 실패시 보여질 페이지.
		username-parameter : 로그인시 사용할 아이디값.
		password-parameter : 로그인시 사용할 패스워드
		※아이디/패스워드는 반드시 input 태그의 name속성에 지정되어야 한다.
		
	logout 하위 속성
		logout-url : 로그아웃시 사용될 URL요청명
		logout-success-url : 로그아웃에 성공했을 때 이동할 페이지
		
	access-denied-handler 하위 속성
		error-page : 로그인 하였으나 권한이 없는 페이지를 요청할 때 이동할 페이지
		
	※ 권한부여를 위한 권한명을 지정할 때 일반적으로 접두어 "ROLE_명칭" 형태로 제작한다.
		Ex) ROLE_ADMIN, ROLE_USER1 등
		
	※intercept-url : 해당 속성을 지정할 때는 반드시 디테일한 권한(작은 권한)을 먼저 지정한 후
		아래로 내려가면서 전체에 대한 권한을 지정해줘야 한다.		
	 -->
	<security:http>
		<!-- 아래 설정이 없다면 로그인 페이지조차 접근이 불가능하게 되므로 반드시 필요한 설정 -->
		<security:intercept-url pattern="/member/login.do" access="permitAll"/>
		
		<!-- /admin/하위는 ADMIN권한 ex)마이페이지-->
		<security:intercept-url pattern="/member/mypage.do" access="hasRole('USER')"/>
		<!-- /security2/하위는 USER 혹은 ADMIN권한 중 하나만 획득하면 접근 가능 -->
		
		<!-- 그 외는 누구나 접근 가능 -->
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<!--  
		login-processing-url="/loginYunjung <- 단순 변수명" : 시큐리티가 알아서 처리해줌
		-->
		<security:form-login 
			login-page="/member/login.do" 
			login-processing-url="/loginAction"
			default-target-url="/member/mypage.do"
			authentication-success-forward-url="/member/loginSuccess.do"
			authentication-failure-forward-url="/member/login.do" 
			username-parameter="id" 
			password-parameter="pass"/>
		<security:logout logout-url="/logout" logout-success-url="/member/login.do"/>
		<security:access-denied-handler error-page="/member/login.do"/>
		<security:csrf disabled="true"/> 
	</security:http>
	
	<!-- 2단계에서 사용하는 부분 --> 
	<!-- <security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user123" password="1234" authorities="ROLE_USER"/>
				<security:user name="admin123" password="1234" authorities="ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>  -->

	
	<!-- 3단계 : 로그인 화면 커스텀 & 권한 DB처리 -->
	<!-- 
	data-source-ref : 데이터베이스 연결을 나타내는 dataSource로 해당 연결은 반드시 root-context.xml에서 해야 한다.
		(servlet-context.xml에서 연결할 수 없음)
	role-prefix : "ROLE_"와 같은 권한명 앞에 붙는 접두어(prefix)를 지정한다. 만약 해당 항목을 "ROLE_"이라고 지정한다면
		DB에넌 "USER"처럼 접두어를 제거한 상태로 권한명이 입력되어야 한다.
	users-by-username-query : 아이디를 이용하여 사용자 정보를 가져오는 쿼리문을 작성한다.
	autorities  -by-username-query : 아이디를 이용하여 권한정보를 가져오는 쿼리문을 작성한다.		
	 -->
	 
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service data-source-ref="dataSource" role-prefix="ROLE_" 
				users-by-username-query="SELECT id, pass, enabled FROM member WHERE id=?" 
				authorities-by-username-query="SELECT id, authority FROM member WHERE id=?"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
